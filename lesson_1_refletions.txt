1. How did viewing a diff between two versions of a file help you see the bug
that was introduced? 
--I was able to spot the difference because the command "diff" showed those two 
files one under another and was easy to spot any typo/bug in the code.

2. How could having easy acces to the entire history of a file make you a more
efficient programmer in the long term?
--While having acces to all versions of your app, if something goes wrong you 
could easy return to the previous version and state of the app

3. What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
--If the versions are automatically uploaded every x hours, there will be a lot 
of versions with irelevant changes and it will be hard to distinguish witch 
version had changed what. Manually committing is the way to go because you know
when a logical change was done or a bug was fixed or a feature implemented and
you can commit it.

4. Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file 
separately?
--Google docs was designed to handle the versions of one doc at time, while 
github is meant to save all versions files of one repostory.

5. How can you use the commands git log and git diff to view the history of 
files?
--I can use the git log command inside of a repostory to see all commits made 
and compare one commit to another using the git diff command.

6. How might using version control make you more confident to make changes that 
could break something?
--I can make risky changes to code now knowing that i could always revert to the
previous commit.

7. Now that you have your workspace set up, what do you want to try using Git 
for ?
--I want to use this version control envoirement for making Android Apps